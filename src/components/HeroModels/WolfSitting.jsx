/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
Command: npx gltfjsx@6.5.3 wolf_lowPoly_SittingIdle.glb 
*/

import React, { useRef, useEffect, useMemo } from 'react'
import { useGraph } from '@react-three/fiber'
import { useGLTF, useAnimations } from '@react-three/drei'
import { SkeletonUtils } from 'three-stdlib'

export function Wolf(props) {
  const group = React.useRef()
  const { scene, animations } = useGLTF('models/wolf_lowPoly_SittingIdle.glb')
  const clone = React.useMemo(() => SkeletonUtils.clone(scene), [scene])
  const { nodes, materials } = useGraph(clone)
  const { actions } = useAnimations(animations, group)

  useEffect(() => {
    if (actions && actions['rigAction']) {
      actions['rigAction'].play()
    } else {
      // If you're unsure of the animation name, log all to find the correct one:
      console.log('Available animations:', Object.keys(actions))
    }
  }, [actions])
  return (
    <group ref={group} {...props} dispose={null}>
      <group name="Scene">
        <group name="rig">
          <primitive object={nodes.root} />
          <primitive object={nodes['MCH-torsoparent']} />
          <primitive object={nodes['MCH-front_foot_ikparentL']} />
          <primitive object={nodes['MCH-front_thigh_ik_targetparentL']} />
          <primitive object={nodes['MCH-front_foot_ikparentR']} />
          <primitive object={nodes['MCH-front_thigh_ik_targetparentR']} />
          <primitive object={nodes['MCH-foot_ikparentL']} />
          <primitive object={nodes['MCH-thigh_ik_targetparentL']} />
          <primitive object={nodes['MCH-foot_ikparentR']} />
          <primitive object={nodes['MCH-thigh_ik_targetparentR']} />
        </group>
        <group name="wolf">
          <skinnedMesh name="Plane" geometry={nodes.Plane.geometry} material={materials.darkBrown} skeleton={nodes.Plane.skeleton} />
          <skinnedMesh name="Plane_1" geometry={nodes.Plane_1.geometry} material={materials.lightBrown} skeleton={nodes.Plane_1.skeleton} />
          <skinnedMesh name="Plane_2" geometry={nodes.Plane_2.geometry} material={materials.baseBrown} skeleton={nodes.Plane_2.skeleton} />
          <skinnedMesh name="Plane_3" geometry={nodes.Plane_3.geometry} material={materials.black} skeleton={nodes.Plane_3.skeleton} />
          <skinnedMesh name="Plane_4" geometry={nodes.Plane_4.geometry} material={materials.EYE} skeleton={nodes.Plane_4.skeleton} />
        </group>
      </group>
    </group>
  )
}

useGLTF.preload('models/wolf_lowPoly_SittingIdle.glb')
